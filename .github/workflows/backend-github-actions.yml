# ワークフローの名前(任意)
name: cc-solo-backend--github-actions

# masterブランチにPR
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

# ワークフローで実行されるジョブをグループ化
jobs:
  #jobの名前を定義
  backend-ci:
    # 最新バージョンのmacOSランナーで実行するようにジョブを構成(Linuxにしたいときはubuntuなど可能)
    # -> ubuntuに変更
    runs-on: ubuntu-latest

    # 最新バージョンのPostgresqlを起動
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres # データベースユーザー名
          POSTGRES_PASSWORD: postgres # データベースパスワード
          POSTGRES_DB: todo_apps # データベース名
        ports:
          - 5432:5432 # ポート番号
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      # #dockerをインストールしておく
      # - name: Install Docker
      #   run: |
      #     curl -fsSL https://get.docker.com -o get-docker.sh
      #     sh get-docker.sh
      #     sudo usermod -aG docker $USER
      #リポジトリをチェックアウトしソースを利用可能にする
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "20.9.0"
      - name: install
        run: npm install
        #静的解析してみる
      - name: ESLint
        run: npm run lint
      - name: Prettier
        run: npm run prettier

      # DBセットアップ
      - name: Run migrations
        run: npm run migrate # Knexを使用してデータベースマイグレーションを実行
      - name: Run seed
        run: npm run seed # Knexを使用してデータベースに値投入

      # テスト実施
      - name: Run tests
        run: npm run test # テストを実行するスクリプトを実行
